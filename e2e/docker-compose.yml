version: "3"
services:
  zookeeper:
    image: zookeeper:3.3.6
    networks:
      - streaming-data-e2e
    ports:
      - "2181:2181"

  zookeeper-seed:
    build:
      context: ../zookeeper
    networks:
      - streaming-data-e2e
    depends_on:
      - zookeeper

  kafka:
    image: wurstmeister/kafka:0.10.0.1-2
    networks:
      - streaming-data-e2e
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_HOST_NAME=kafka
      - KAFKA_ADVERTISED_PORT=9092
    depends_on:
      - zookeeper

  hadoop:
    image: sequenceiq/hadoop-docker:2.7.0
    command: "/etc/bootstrap.sh -d"
    networks:
      - streaming-data-e2e
    ports:
      - "50070:50070"
      - "50075:50075"
      - "8088:8088"
      - "8042:8042"
      - "9000:9000"
      - "50010:50010"

  hadoop-seed:
    build:
      context: ../hdfs
    networks:
      - streaming-data-e2e
    depends_on:
      - hadoop
    restart: on-failure

  station-information-producer:
    build:
      context: ..
      dockerfile: e2e/Dockerfile-e2e-nyc-station-information
    depends_on:
      - kafka
      - zookeeper-seed
      - mock-server
    networks:
      - streaming-data-e2e

  station-status-producer:
    build:
      context: ..
      dockerfile: e2e/Dockerfile-e2e-nyc-station-status
    depends_on:
      - kafka
      - zookeeper-seed
      - mock-server
    networks:
      - streaming-data-e2e

  station-san-francisco-producer:
    build:
      context: ..
      dockerfile: e2e/Dockerfile-e2e-station-san-francisco
    depends_on:
      - kafka
      - zookeeper-seed
      - mock-server
    networks:
      - streaming-data-e2e

  station-marseille-producer:
    build:
      context: ..
      dockerfile: e2e/Dockerfile-e2e-station-marseille
    depends_on:
      - kafka
      - zookeeper-seed
      - mock-server
    networks:
      - streaming-data-e2e

  raw-station-information-data-saver:
    build:
      context: ../RawDataSaver
      dockerfile: Dockerfile-station-information
    depends_on:
      - kafka
      - station-information-producer
      - station-status-producer
      - station-san-francisco-producer
      - hadoop-seed
      - zookeeper-seed
    volumes:
      - ~/.ivy2:/root/.ivy2:rw
    networks:
      - streaming-data-e2e
    restart: on-failure

  raw-station-status-data-saver:
    build:
      context: ../RawDataSaver
      dockerfile: Dockerfile-station-status
    depends_on:
      - kafka
      - station-information-producer
      - station-status-producer
      - station-san-francisco-producer
      - hadoop-seed
      - zookeeper-seed
    volumes:
      - ~/.ivy2:/root/.ivy2:rw
    networks:
      - streaming-data-e2e
    restart: on-failure

  raw-station-data-san-francisco-saver:
    build:
      context: ../RawDataSaver
      dockerfile: Dockerfile-station-data-SF
    depends_on:
      - kafka
      - station-information-producer
      - station-status-producer
      - station-san-francisco-producer
      - hadoop-seed
      - zookeeper-seed
    volumes:
      - ~/.ivy2:/root/.ivy2:rw
    networks:
      - streaming-data-e2e
    restart: on-failure

  station-consumer:
    build:
      context: ../StationConsumer
    depends_on:
      - zookeeper-seed
      - kafka
      - station-status-producer
      - station-san-francisco-producer
      - raw-station-status-data-saver
    volumes:
      - ~/.ivy2:/root/.ivy2:rw
    command: ["./wait-for.sh", "zookeeper:2181", "-t", "30"]
    networks:
      - streaming-data-e2e
    restart: on-failure

  station-transformer-nyc:
    build:
      context: ../StationTransformerNYC
    depends_on:
      - zookeeper-seed
      - hadoop-seed
      - kafka
      - station-status-producer
      - station-information-producer
    volumes:
      - ~/.ivy2:/root/.ivy2:rw
    command: ["./wait-for.sh", "zookeeper:2181", "-t", "30"]
    networks:
      - streaming-data-e2e
    restart: on-failure

  mock-server:
    build:
      context: ../mock-server
    networks:
      - streaming-data-e2e
    restart: on-failure
    ports:
      - "9991:9991"

  e2e-test:
    build:
      context: .
      dockerfile: Dockerfile-e2e-test
    networks:
      - streaming-data-e2e
    restart: on-failure
    container_name: e2e-test
    depends_on:
      - zookeeper-seed
      - hadoop-seed
      - kafka
      - station-information-producer
      - station-status-producer
      - station-san-francisco-producer
      - raw-station-information-data-saver
      - raw-station-status-data-saver
      - raw-station-data-san-francisco-saver
      - station-transformer-nyc
      - station-consumer
#    command: ["./wait-for.sh", "http://hadoop:50070/explorer.html#/tw/stationMart/data", "-t", "0"]

networks:
  streaming-data-e2e:
